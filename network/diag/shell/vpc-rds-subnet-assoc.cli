#!/bin/bash

# Copyright 2016 Amazon.com, Inc. or its affiliates.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# A copy of the License is located at
#
#    http://aws.amazon.com/apache2.0/
#
# or in the "license" file accompanying this file.
# This file is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the License for the specific language governing permissions
# and limitations under the License.
#
# vpc-rds-subnet-assoc.cli    Ref  rds-support-tools/network/network.README

# exit if required first parameter (VPCID) is not present 
if [[ ${1:-0} = 0 ]] ;  then
   clear
   echo 
   echo 
   echo "Usage:  vpc-rds-subnet-assoc.cli <vpc identifier>"
   echo 
   echo 
   exit

fi
vpc=$1

export curlbase="curl http://169.254.169.254/latest/meta-data/network/interfaces/macs/"
export macaddr=`$curlbase -s | head -1`
export curvpcid=`$curlbase$macaddr\vpc-id -s`

if [ "$vpc" != "$curvpcid" ]; then
	echo "Warning: VPC $vpc is not same as the EC2 instance's VPC $curvpcid. So, it may not be possible to determine some RDS instances subnets."
fi

#extract all subnet and privates ips from the ENIs associated with the VPC
subnets_ips=`aws ec2 describe-network-interfaces --filters Name="description",Values="RDSNetworkInterface" Name="vpc-id",Values="$vpc" --query "NetworkInterfaces[].[SubnetId,PrivateIpAddress]" --output text`
array_subnets_with_ips=(${subnets_ips})

# Obtain RDS instances end-points. 
export rds_instances=`aws rds describe-db-instances --query "DBInstances[? DBSubnetGroup.VpcId=='$vpc'].Endpoint.Address" --output text`

echo "Details of RDS Instances running in the VPC - $vpc are: "
#iterate over the list of all rds instances
for rdsinst in $rds_instances; do
        ipfromlookup=`nslookup $rdsinst | tail -2 | head -1 | cut -d ' ' -f2`
        subnet=""
        for (( i=0; i<${#array_subnets_with_ips[@]} ; i+=2 )) ; do
        if [[ $ipfromlookup = ${array_subnets_with_ips[i+1]} ]]; then
                subnet=${array_subnets_with_ips[i]}
        fi
        done
        printf '%-80s %s\n' "$rdsinst" "$subnet"
done

